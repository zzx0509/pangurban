[{"title":"css_learn_1","url":"/2019/03/04/css-learn-1/","content":"# CSS学习笔记(1)\n---\n*ref: http://biaoyansu.com*\n## 概述\nCSS(cascading style sheet), 定义样式和兼顾交互, 将样式与html标签抽离, 避免了标记元素和结构元素的混乱.  \n结构化有以下优点:  \n- 利于内容索引\n- 可访问性好\n- 实现高级页面表现\n- 易于维护  \n\n## 基本语法\n### 引入方式\n- 内嵌式/ 内联式\n```\n<head>\n    <meta charset = \"utf-8\">\n    <title></title>\n    <style>\n        element{\n            a: b;\n            c: d;\n            e: f;\n        }\n    </style>\n</head>\n```\n\n- 链接式\n```\n<head>\n    <meta charset = \"utf-8\">\n    <title></title>\n    <link rel = \"stylesheet\" href=\"index.css\">\n</head>\n```\n\n- 行内式\n```\n<body>\n    <p style = \"color: red\">abc</p>\n</body>\n```\n\n### 选择器\n- 元素选择器  \n控制范围粒度大, 有时不是很方便.\n- 类选择器  \n分类选择页面元素.\n```\nhtml:\n<body>\n    <p class=\"red bold\">A</p>\n    <div class=\"red\">B</div>\n    <p class=\"green\">B</div>\n</body>\ncss:\n.red{\n    color: red;\n}\n.green{\n    color: red;\n}\n```\n- ID选择器   \n指定页面中唯一元素.\n```\nhtml:\n<p id=\"logo\">LOGO</p>\ncss:\n#logo {\n    color:gray;\n}\n```\n- 属性选择器   \n```\n*: 普通匹配  \n^: 开始字符匹配  \n&: 结束字符匹配\n[title*=\"click\"]{\n    color: gray;\n    border: 2px dotted;\n}\na[href^=\"http://google.com\"]{\n    color: blue;\n}\n```\n- 后代选择器  \n类选择器后加空格再写其后代, 使选择更准确.\n```\n.a .b .c{\n    padding: 2px;\n}\n```\n- 相邻选择器&通用相邻选择器\n也叫兄弟选择器 e.g.\n```\nhtml:\n<body>\n    <div class='a'>a</div>\n    <div class='b'>b</div>\n    <div class='c'>c</div>\n</body>\n```\n```\ncss:\n.a + div {\n    background: rgba(255, 0, 0, 0.3);\n}\n/* 相邻选择器,选择b */\n.a ~ div{\n    background: rgba(0, 255, 0, 0.5);\n}\n /* 通用相邻选择器,选择b和c */\n```\n- 伪类选择器\n```\nhtml:\n<body>\n    <a href=\"http://google.com\">online test</a>\n    <input type=\"text\">\n    <button type=\"button\" name=\"button\">click me</button>\n</body>\n```\n```\ncss:\na:link {\n    color: blue;\n}\na:visited {\n    color: gray;\n}\ninput:focus {\n    outline: none;\n    background: gray;\n}\nbutton:hover {\n    background: #eee;\n}\nbutton:active {\n    color: #fff;\n}\n/* 伪类选择器 */\n```\n- 伪元素选择器\n```\nhtml:\n<body>\n    <a class='help'>what is css</a>\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. </p>\n</body>\n```\n```\ncss:\np:first-letter{\n    font-size: 40px;\n}\n.help::before{\n    content: \"-\";\n    color: red;\n}\n.help::after{\n    content: \"[?]\";\n    color: blue;\n}\n```\n- 选择器权重\n![权重维度图](/选择器权重.png)\n- 字体属性\n```\np{\n    font-family: sans-serif;\n    font-weight: bold;\n    font-size: 120%;\n}\n```\n### 其他\n- 文字属性\n```\np{\n    text-align: left;\n    line-height: 2;\n    text-decoration: underline;\n}\n```\n- display属性\nblock(块级元素): 适合做页面布局  \ninline(行内元素)\ninline-block(行内块元素)\n- 框(Block Box)\n从内到外: content -> padding -> border -> margin  \n- 行框(Line Box)\n![行框示意图](/行框示意图.jpeg)\n- 继承(inherit)\n---\n","tags":["css"]},{"title":"2019-list","url":"/2019/03/01/2019-list/","content":"# 2019清单\n---\n## 电影\n* 看不见的旋律\n* 网络迷踪\n* 大佛普拉斯\n* __死侍2 __\n* 掠食城市\n* __流浪地球__\n* __飞驰人生__\n* __绿皮书__\n\n## 番\n* 我的英雄学院\n* 全职高手\n* 黑色四叶草\n* 五等分的花嫁\n* 关于我转生变成史莱姆这件事\n* 同居人是猫\n* 冰菓\n* 超能力女儿\n* 少女终末旅行\n* 如果历史是一群喵\n* 盾之勇者成名录\n* 灵能百分百\n* 辉夜大小姐想让我告白\n\n## 书\n* 文明之光\n* 人生哲思录\n","tags":["life"]},{"title":"Markdown学习笔记","url":"/2019/02/28/Markdown_learn/","content":"# Markdown 学习笔记\n---\n## 概述\nMarkdown 旨在实现[易读易写]的网络书写语言. Markdown的灵感来源是纯文本电子邮件.\n\nMarkdown并不是HTML的取代品或替换品, Markdown的语法仅对应了HTML标记的一小部分,不属于Markdown涵盖范围的标签, 都可以直接在文档中使用HTML书写, 需要注意的标签例如&lt;div>, &lt;table>, &lt;pre>, &lt;p>必须在前后加上空行与其他内容区隔开, 且他们的开始标签和关闭标签不能使用制表符和空格来缩进.\n\n## 区块元素\n\n### 段落和换行\n一个 Markdown 段落是由一个或多个连续的文本行组成, 它的前后要有一个以上的空行, 普通段落不该用空格或制表符来缩进.\n\n上述特性指出Markdown允许段落内的强迫换行(插入换行符), 如果确实需要依赖Markdown来插入&lt;br>标签, 需要在插入出输入两个空格然后回车.\n\n### 标题\nMarkdown支持两种标题语法:类Setex和类atx形式.\n\n类Setex形式使用底线,利用=(最高节标题)和-(第二阶标题). 任何数量的=和-都有效.\n\n类atx形式则是在行首插入1到6各#, 对应标题1到6阶.\n\n### 区块引用\nMarkdown 标记区块引用(Blockquotes)是使用类似email中 > 的引用形式. 在每行最前加上>\n\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n>\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.\n\n或者在段落第一行前加上>也是可行的.\n> Ab quae minim tamen quamquam, quem litteris sempiternum.Aut arbitror\nconiunctione. Senserit illum consequat laborum. Doctrina ubi quis.\n\n区块引用可以嵌套, 也可以使用其他的Markdown代码.\n\n### 列表\nMarkdown支持有序列表和无序列表.   \n无序列表使用*, +, -作为标记:\n* Red\n* Green\n* blue\n\n有序列表则使用数字标号和英文句号:\n1. Beijing\n2. Shanghai\n3. Guangzhou\n\n### 代码区块\n使用制表符或者4个空格就可以建立代码区块, Markdown会使用&lt; pre>或者&lt;code>标签将代码区块包装.\n\n### 分割线\n用三个以上的 * , - , _ 来建立分割线, 分割线内不能有其他内容.\n\n## 区段元素\n\n### 链接\nMarkdown支持两种形式的链接语法: 行内式和参考式. 链接文字使用方括号来标记.\n\n行内式链接: 方括号后面紧接圆括号并插入网址链接即可, 如果还要加上链接的title, 只要在网址后使用双引号把title文字包起来即可, 例如:\nThis is [an inline-style link](http://www.google.com \"google\").\n\n参考式链接: 链接文字的括号后面接上另一个方括号, 而在第二个方括号里面要填入用以辨识连接的标记:   \nThis is [a reference-style link][id] .  \n然后在任意处将这个标记(id)的链接内容定义出来   \n`[id]: http://www.google.com 'google'`\n\n[id]: http://www.google.com 'google'\n\n隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 \"Google\" 链接到 google.com，你可以简化成：   \n`[Google][]`  \n然后定义链接内容:   \n`[Google]: http://www.google.com`   \n\n### 强调\nMarkdown 使用星号( \\* )和底线( \\_ )作为强调标记, 被其包围的内容会转成&lt;em>标签包围, 用两个的话, 会被转成&lt;strong>. e.g.:   \n*this is a emphasize example*   \n__this is a strong example__\n\n### 代码\n如果要标记一小段行内代码, 可以使用反引号( \\` )将他包起来. e.g.: `prinf()`\n\n### 图片\n图片标记同样分为行内式和参考式.   \n行内式语法: `![Alt text](/path/to/img.jpg)`   \n参考式语法: `![Alt text][id]`   \n定义方式: `[id]: url/to/img.jpg \"title\"`\n\n## 其它\n\n### 反斜杠\nMarkdown中可以利用反斜杠来插入其它有意义的符号(如星号,方括号等). e.g.: \\*, \\[\n\n### 自动链接\nMarkdown支持简短的链接处理, 用方括号包起来则会自动转成链接. e.g.:   \n[http://google.com]\n\n---\n","tags":["git"]},{"title":"Hello World","url":"/2019/02/27/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]